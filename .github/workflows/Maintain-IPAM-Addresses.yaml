# This workflow maintains the IPAM set of available address ranges

name: Maintain-IPAM-Addresses

on:
  push:
    branches: [ none ]
  workflow_dispatch:

jobs:
  maintain-ipam-addresses:
    runs-on: windows-latest
    steps:
      - name: Check out repository under $GITHUB_WORKSPACE, so job can access it
        uses: actions/checkout@v2

      - name: Log on to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - name: Add IPAM Address Ranges
        uses: azure/powershell@v1
        with:
          inlineScript: |           
            $nwRanges = @(@("10.160.0.0",4,"Small","Prod","uksouth"),
                          @("10.161.0.0",4,"Medium","Prod","uksouth"),
                          @("10.162.0.0",4,"Large","Prod","uksouth"),
                          @("10.170.0.0",4,"Small","Nonprod","uksouth"),
                          @("10.171.0.0",4,"Medium","Nonprod","uksouth"),
                          @("10.172.0.0",4,"Large","Nonprod","uksouth"),
                          @("10.180.0.0",4,"Small","Prod","ukwest"),
                          @("10.181.0.0",4,"Medium","Prod","ukwest"),
                          @("10.182.0.0",4,"Large","Prod","ukwest"),
                          @("10.190.0.0",4,"Small","Nonprod","ukwest"),
                          @("10.191.0.0",4,"Medium","Nonprod","ukwest"),
                          @("10.192.0.0",4,"Large","Nonprod","ukwest"))

            $ipamSubName = "np0009"
            $regionId = "uks"
            $aseDeploy = $false   
            $rgNetworkName = "rg-$ipamSubName-$regionId-ipam"      
            $faName = "fa-$ipamSubName-$regionId-ipam"
            $faId = (Get-AzWebApp -Name $faName -ResourceGroupName $rgNetworkName).Id

            Write-Output "Adding address spaces"
            $addFunctionKey = (Invoke-AzResourceAction -ResourceId "$faId/functions/AddAddressSpace" -Action listkeys -Force).default
            Write-Output "Adding new address spaces to IPAM"
            if ($aseDeploy) {
              $uriAdd = 'https://' + $faName + '.ase-' + $ipamSubName + '-' + $regionId + '-ipam.p.azurewebsites.net/api/AddAddressSpace?code=' + $addFunctionKey
            }
            else {
              $uriAdd = 'https://' + $faName + '.azurewebsites.net/api/AddAddressSpace?code=' + $addFunctionKey
            }

            foreach ($nwRange in $nwRanges) {
              switch ($nwRange[2]) {
                "Small" {$count = 2; $suffix = '/23'}
                "Medium" {$count = 4; $suffix = '/22'}
                "Large" {$count = 8; $suffix = '/21'}
                Default {$count = 2; $suffix = '/23'}
              }
              $a,$b,$c,$d = $nwRange[0].Split(".")
              for ($i = 0; $i -lt $nwRange[1]; $i++) {
                $nwAddress="$a.$b.$([int]$c+($count * $i)).$d" + $suffix
                $nwEnv = $nwRange[3]
                $nwRegion = $nwRange[4]
                Write-Output "Adding network $nwAddress in the $nwEnv environment"
                $body = @{
                    "NetworkAddress"=$nwAddress
                    "NwEnvironment"=$nwEnv
                    "NwRegion"=$nwRegion
                } | ConvertTo-Json
                $params = @{
                    'Uri'         = $uriAdd
                    'Method'      = 'POST'
                    'ContentType' = 'application/json'
                    'Body'        = $body 
                }
                try {
                  Invoke-RestMethod @params -ErrorAction Continue
                }
                catch {
                    Write-Host "Error listing resources"
                    $errMsg = $_
                    Write-Host $errMsg
                }
              }
            }
          azPSVersion: latest 
