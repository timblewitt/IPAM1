{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "apiProfile": "2018-03-01-hybrid",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "allowedValues": ["Standard_LRS"],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Type of redundancy for your storage account"
      }
    },
    "tableServiceName": {
      "type": "string"
    },
    "tableName": {
      "type": "string"
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniqueString(resourceGroup().id),'storage')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "name": "[concat(variables('storageAccountName'),'/', parameters('tableServiceName'))]",
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2019-06-01",
      "properties": {
        "cors": {
          "corsRules": [
            {
              "allowedOrigins": ["*"],
              "allowedMethods": ["PUT", "GET", "POST"],
              "maxAgeInSeconds": 0,
              "exposedHeaders": ["*"],
              "allowedHeaders": ["*"]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "resources": []
    },
    {
      "name": "[concat(variables('storageAccountName'),'/default/',parameters('tableName'))]",
      "type": "Microsoft.Storage/storageAccounts/tableServices/tables",
      "apiVersion": "2019-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/tableServices', variables('storageAccountName'), parameters('tableServiceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "ResourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "StorageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    }
  }
}
